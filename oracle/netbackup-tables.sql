ALTER TABLE NETBACKUP.HOST
 DROP PRIMARY KEY CASCADE;

DROP TABLE NETBACKUP.HOST CASCADE CONSTRAINTS;

CREATE TABLE NETBACKUP.HOST
(
  HOST_TYPE    VARCHAR2(64 BYTE),
  OS           VARCHAR2(64 BYTE),
  OS_TYPE      VARCHAR2(64 BYTE),
  VERSION      VARCHAR2(64 BYTE),
  STATUS       VARCHAR2(64 BYTE),
  NAME         VARCHAR2(64 BYTE)                NOT NULL,
  HOST_ID      INTEGER                          NOT NULL,
  IP           VARCHAR2(64 BYTE),
  MASTER_ID    INTEGER                          NOT NULL,
  DATE_INSERT  DATE,
  DATE_UPDATE  DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


CREATE UNIQUE INDEX NETBACKUP.PK_HOST ON NETBACKUP.HOST
(HOST_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX NETBACKUP.UI_HOST_NAME ON NETBACKUP.HOST
(NAME)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE OR REPLACE TRIGGER NETBACKUP.HOST_BI
  BEFORE INSERT
  ON NETBACKUP.HOST
  for each row
BEGIN
:new.Host_Id := netbackupid_seq.nextval;
END;
/


ALTER TABLE NETBACKUP.HOST ADD (
  CONSTRAINT PK_HOST
  PRIMARY KEY
  (HOST_ID)
  USING INDEX NETBACKUP.PK_HOST
  ENABLE VALIDATE);
ALTER TABLE NETBACKUP.RETENTION
 DROP PRIMARY KEY CASCADE;

DROP TABLE NETBACKUP.RETENTION CASCADE CONSTRAINTS;

CREATE TABLE NETBACKUP.RETENTION
(
  IND           INTEGER                         NOT NULL,
  SECS          INTEGER,
  PERIOD        VARCHAR2(64 BYTE),
  KVO           INTEGER,
  MASTER_ID     INTEGER                         NOT NULL,
  DATE_INSERT   DATE,
  DATE_UPDATE   DATE,
  RETENTION_ID  INTEGER                         NOT NULL
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


CREATE UNIQUE INDEX NETBACKUP.PK_RETENTION ON NETBACKUP.RETENTION
(IND)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX NETBACKUP.PK_RETENTION_1 ON NETBACKUP.RETENTION
(IND, MASTER_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX NETBACKUP.PK_RETENTION_ID ON NETBACKUP.RETENTION
(RETENTION_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE OR REPLACE TRIGGER NETBACKUP.RETENTION_BI
  BEFORE INSERT
  ON NETBACKUP.RETENTION
  for each row
BEGIN
:new.RetenTION_ID := netbackupid_seq.nextval;
END;
/


ALTER TABLE NETBACKUP.RETENTION ADD (
  CONSTRAINT UI_RETENTION_MASTER
  PRIMARY KEY
  (IND, MASTER_ID)
  USING INDEX NETBACKUP.PK_RETENTION_1
  ENABLE VALIDATE,
  CONSTRAINT PK_RETENTION_ID
  UNIQUE (RETENTION_ID)
  USING INDEX NETBACKUP.PK_RETENTION_ID
  ENABLE VALIDATE);
ALTER TABLE NETBACKUP.ROBOT
 DROP PRIMARY KEY CASCADE;

DROP TABLE NETBACKUP.ROBOT CASCADE CONSTRAINTS;

CREATE TABLE NETBACKUP.ROBOT
(
  ROBOT_NUMBER   INTEGER                        NOT NULL,
  ROBOT_NAME     VARCHAR2(64 BYTE),
  ROBOT_TYPE     VARCHAR2(64 BYTE),
  ROBOTIC_PATH   VARCHAR2(64 BYTE),
  SERIAL_NUMBER  VARCHAR2(64 BYTE),
  INQUIRY        VARCHAR2(64 BYTE),
  HOST_ID        INTEGER                        NOT NULL,
  MASTER_ID      INTEGER                        NOT NULL,
  DATE_INSERT    DATE,
  DATE_UPDATE    DATE,
  ROBOT_ID       INTEGER                        NOT NULL
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


CREATE INDEX NETBACKUP.IF_ROBOT_HOST ON NETBACKUP.ROBOT
(HOST_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX NETBACKUP.PK_ROBOT_1 ON NETBACKUP.ROBOT
(ROBOT_NUMBER, MASTER_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX NETBACKUP.PK_ROBOT_ID ON NETBACKUP.ROBOT
(ROBOT_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE OR REPLACE TRIGGER NETBACKUP.ROBOT_BI
  BEFORE INSERT
  ON NETBACKUP.ROBOT
  for each row
BEGIN
:new.Robot_ID := netbackupid_seq.nextval;
END;
/


ALTER TABLE NETBACKUP.ROBOT ADD (
  CONSTRAINT UI_ROBON_MASTER
  PRIMARY KEY
  (ROBOT_NUMBER, MASTER_ID)
  USING INDEX NETBACKUP.PK_ROBOT_1
  ENABLE VALIDATE,
  CONSTRAINT PK_ROBOT_ID
  UNIQUE (ROBOT_ID)
  USING INDEX NETBACKUP.PK_ROBOT_ID
  ENABLE VALIDATE);

ALTER TABLE NETBACKUP.ROBOT ADD (
  CONSTRAINT R_6 
  FOREIGN KEY (HOST_ID) 
  REFERENCES NETBACKUP.HOST (HOST_ID)
  ENABLE VALIDATE);
ALTER TABLE NETBACKUP.STORAGEUNIT
 DROP PRIMARY KEY CASCADE;

DROP TABLE NETBACKUP.STORAGEUNIT CASCADE CONSTRAINTS;

CREATE TABLE NETBACKUP.STORAGEUNIT
(
  ROBOT_ID          INTEGER,
  DENSITY           VARCHAR2(64 BYTE),
  FRAGMENT_SIZE     INTEGER,
  MAX_DRIVES        INTEGER,
  MULTIPLEXING      INTEGER,
  IS_GROUP          INTEGER,
  MEDIA_SERVER_ID   INTEGER,
  STORAGEUNIT_ID    INTEGER                     NOT NULL,
  NAME              VARCHAR2(64 BYTE)           NOT NULL,
  TYPE              VARCHAR2(64 BYTE),
  SUBTYPE           VARCHAR2(64 BYTE),
  PATH              VARCHAR2(144 BYTE),
  CONC_JOBS         INTEGER,
  HIGH_WMARK        INTEGER,
  LOW_WMARK         INTEGER,
  DISK_POOL         VARCHAR2(64 BYTE),
  IS_SLP            INTEGER,
  SLP_DUP_PRIORITY  INTEGER,
  SLP_VERSION       INTEGER,
  SLP_STATE         VARCHAR2(16 BYTE),
  MASTER_ID         INTEGER                     NOT NULL,
  DATE_INSERT       DATE,
  DATE_UPDATE       DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;

COMMENT ON COLUMN NETBACKUP.STORAGEUNIT.FRAGMENT_SIZE IS 'Max Fragment Size';

COMMENT ON COLUMN NETBACKUP.STORAGEUNIT.MAX_DRIVES IS 'Number of Drives';

COMMENT ON COLUMN NETBACKUP.STORAGEUNIT.MULTIPLEXING IS 'Max MPX';

COMMENT ON COLUMN NETBACKUP.STORAGEUNIT.MEDIA_SERVER_ID IS 'Host Connection';

COMMENT ON COLUMN NETBACKUP.STORAGEUNIT.NAME IS 'Label';

COMMENT ON COLUMN NETBACKUP.STORAGEUNIT.TYPE IS 'Storage Unit Type';

COMMENT ON COLUMN NETBACKUP.STORAGEUNIT.SUBTYPE IS 'Media Subtype';

COMMENT ON COLUMN NETBACKUP.STORAGEUNIT.CONC_JOBS IS 'Concurrent Jobs';

COMMENT ON COLUMN NETBACKUP.STORAGEUNIT.HIGH_WMARK IS 'High Water Mark';

COMMENT ON COLUMN NETBACKUP.STORAGEUNIT.LOW_WMARK IS 'Low Water Mark';

COMMENT ON COLUMN NETBACKUP.STORAGEUNIT.SLP_DUP_PRIORITY IS 'Duplication Job Priority';


CREATE INDEX NETBACKUP.IF_STORAGEUNIT_MEDIAS ON NETBACKUP.STORAGEUNIT
(MEDIA_SERVER_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX NETBACKUP.IF_STORAGEUNIT_ROBOTN ON NETBACKUP.STORAGEUNIT
(ROBOT_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX NETBACKUP.PK_STORAGEUNIT ON NETBACKUP.STORAGEUNIT
(STORAGEUNIT_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX NETBACKUP.UI_SU_NAME_MASTER ON NETBACKUP.STORAGEUNIT
(NAME, MASTER_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE OR REPLACE TRIGGER NETBACKUP.STORAGEUNIT_BI
  BEFORE INSERT
  ON NETBACKUP.STORAGEUNIT
  for each row
BEGIN
:new.StorageUnit_ID := netbackupid_seq.nextval;
END;
/


ALTER TABLE NETBACKUP.STORAGEUNIT ADD (
  CONSTRAINT PK_STORAGEUNIT
  PRIMARY KEY
  (STORAGEUNIT_ID)
  USING INDEX NETBACKUP.PK_STORAGEUNIT
  ENABLE VALIDATE,
  CONSTRAINT UI_SU_NAME_MASTER
  UNIQUE (NAME, MASTER_ID)
  USING INDEX NETBACKUP.UI_SU_NAME_MASTER
  ENABLE VALIDATE);

ALTER TABLE NETBACKUP.STORAGEUNIT ADD (
  CONSTRAINT R_19 
  FOREIGN KEY (MEDIA_SERVER_ID) 
  REFERENCES NETBACKUP.HOST (HOST_ID)
  ENABLE VALIDATE,
  CONSTRAINT R_20 
  FOREIGN KEY (ROBOT_ID) 
  REFERENCES NETBACKUP.ROBOT (ROBOT_ID)
  ENABLE VALIDATE);
ALTER TABLE NETBACKUP.STORAGEUNITINGROUP
 DROP PRIMARY KEY CASCADE;

DROP TABLE NETBACKUP.STORAGEUNITINGROUP CASCADE CONSTRAINTS;

CREATE TABLE NETBACKUP.STORAGEUNITINGROUP
(
  STORAGEUNITGROUP_ID  INTEGER                  NOT NULL,
  STORAGEUNIT_ID       INTEGER                  NOT NULL,
  DATE_INSERT          DATE,
  DATE_UPDATE          DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


CREATE UNIQUE INDEX NETBACKUP.PK_STORAGEUNITINGROUP ON NETBACKUP.STORAGEUNITINGROUP
(STORAGEUNITGROUP_ID, STORAGEUNIT_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

ALTER TABLE NETBACKUP.STORAGEUNITINGROUP ADD (
  CONSTRAINT PK_STORAGEUNITINGROUP
  PRIMARY KEY
  (STORAGEUNITGROUP_ID, STORAGEUNIT_ID)
  USING INDEX NETBACKUP.PK_STORAGEUNITINGROUP
  ENABLE VALIDATE);

ALTER TABLE NETBACKUP.STORAGEUNITINGROUP ADD (
  CONSTRAINT R_90 
  FOREIGN KEY (STORAGEUNIT_ID) 
  REFERENCES NETBACKUP.STORAGEUNIT (STORAGEUNIT_ID)
  ENABLE VALIDATE,
  CONSTRAINT R_91 
  FOREIGN KEY (STORAGEUNITGROUP_ID) 
  REFERENCES NETBACKUP.STORAGEUNIT (STORAGEUNIT_ID)
  ENABLE VALIDATE);
ALTER TABLE NETBACKUP.CALENDAR
 DROP PRIMARY KEY CASCADE;

DROP TABLE NETBACKUP.CALENDAR CASCADE CONSTRAINTS;

CREATE TABLE NETBACKUP.CALENDAR
(
  CALDATE       DATE,
  SCHEDULER_ID  INTEGER                         NOT NULL,
  DATE_INSERT   DATE,
  DATE_UPDATE   DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


CREATE UNIQUE INDEX NETBACKUP.PK_CALENDAR ON NETBACKUP.CALENDAR
(SCHEDULER_ID, CALDATE)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

ALTER TABLE NETBACKUP.CALENDAR ADD (
  CONSTRAINT PK_CALENDAR
  PRIMARY KEY
  (SCHEDULER_ID, CALDATE)
  USING INDEX NETBACKUP.PK_CALENDAR
  ENABLE VALIDATE);

ALTER TABLE NETBACKUP.CALENDAR ADD (
  CONSTRAINT R_49 
  FOREIGN KEY (SCHEDULER_ID) 
  REFERENCES NETBACKUP.SCHEDULER (SCHEDULER_ID)
  ENABLE VALIDATE);
ALTER TABLE NETBACKUP.CLIENT
 DROP PRIMARY KEY CASCADE;

DROP TABLE NETBACKUP.CLIENT CASCADE CONSTRAINTS;

CREATE TABLE NETBACKUP.CLIENT
(
  HOST_ID      INTEGER                          NOT NULL,
  POLICY_ID    INTEGER                          NOT NULL,
  DATE_INSERT  DATE,
  DATE_UPDATE  DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


CREATE INDEX NETBACKUP.IF_CLIENT_HOST ON NETBACKUP.CLIENT
(HOST_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX NETBACKUP.IF_CLIENT_POLICY ON NETBACKUP.CLIENT
(POLICY_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX NETBACKUP.PK_CLIENT ON NETBACKUP.CLIENT
(HOST_ID, POLICY_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

ALTER TABLE NETBACKUP.CLIENT ADD (
  CONSTRAINT PK_CLIENT
  PRIMARY KEY
  (HOST_ID, POLICY_ID)
  USING INDEX NETBACKUP.PK_CLIENT
  ENABLE VALIDATE);

ALTER TABLE NETBACKUP.CLIENT ADD (
  CONSTRAINT R_27 
  FOREIGN KEY (POLICY_ID) 
  REFERENCES NETBACKUP.POLICY (POLICY_ID)
  ENABLE VALIDATE,
  CONSTRAINT R_35 
  FOREIGN KEY (HOST_ID) 
  REFERENCES NETBACKUP.HOST (HOST_ID)
  ENABLE VALIDATE);
ALTER TABLE NETBACKUP.COPY
 DROP PRIMARY KEY CASCADE;

DROP TABLE NETBACKUP.COPY CASCADE CONSTRAINTS;

CREATE TABLE NETBACKUP.COPY
(
  NUMB            INTEGER                       NOT NULL,
  RETENTION       INTEGER,
  COPY_FAILS      VARCHAR2(16 BYTE),
  VOLUMEPOOL_ID   INTEGER,
  STORAGEUNIT_ID  INTEGER,
  SCHEDULER_ID    INTEGER                       NOT NULL,
  DATE_INSERT     DATE,
  DATE_UPDATE     DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


CREATE INDEX NETBACKUP.IF_COPY_POLICYSU ON NETBACKUP.COPY
(STORAGEUNIT_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX NETBACKUP.IF_COPY_SCHEDULER ON NETBACKUP.COPY
(SCHEDULER_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX NETBACKUP.IF_COPY_VOLUMEPOOL ON NETBACKUP.COPY
(VOLUMEPOOL_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX NETBACKUP.PK_COPY ON NETBACKUP.COPY
(NUMB, SCHEDULER_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

ALTER TABLE NETBACKUP.COPY ADD (
  CONSTRAINT COPY_FAILS_612061573
  CHECK (Copy_Fails IN ('continue', 'fail all copies'))
  ENABLE VALIDATE,
  CONSTRAINT PK_COPY
  PRIMARY KEY
  (NUMB, SCHEDULER_ID)
  USING INDEX NETBACKUP.PK_COPY
  ENABLE VALIDATE);

ALTER TABLE NETBACKUP.COPY ADD (
  CONSTRAINT R_41 
  FOREIGN KEY (SCHEDULER_ID) 
  REFERENCES NETBACKUP.SCHEDULER (SCHEDULER_ID)
  ENABLE VALIDATE,
  CONSTRAINT R_42 
  FOREIGN KEY (STORAGEUNIT_ID) 
  REFERENCES NETBACKUP.STORAGEUNIT (STORAGEUNIT_ID)
  ENABLE VALIDATE,
  CONSTRAINT R_43 
  FOREIGN KEY (VOLUMEPOOL_ID) 
  REFERENCES NETBACKUP.VOLUMEPOOL (VOLUMEPOOL_ID)
  ENABLE VALIDATE);
ALTER TABLE NETBACKUP.EJECTPOOLS
 DROP PRIMARY KEY CASCADE;

DROP TABLE NETBACKUP.EJECTPOOLS CASCADE CONSTRAINTS;

CREATE TABLE NETBACKUP.EJECTPOOLS
(
  VOLUMEPOOL_ID    INTEGER                      NOT NULL,
  VAULTPROFILE_ID  INTEGER                      NOT NULL,
  DATE_INSERT      DATE,
  DATE_UPDATE      DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


CREATE UNIQUE INDEX NETBACKUP.PK_EJECTPOOLS ON NETBACKUP.EJECTPOOLS
(VOLUMEPOOL_ID, VAULTPROFILE_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

ALTER TABLE NETBACKUP.EJECTPOOLS ADD (
  CONSTRAINT PK_EJECTPOOLS
  PRIMARY KEY
  (VOLUMEPOOL_ID, VAULTPROFILE_ID)
  USING INDEX NETBACKUP.PK_EJECTPOOLS
  ENABLE VALIDATE);

ALTER TABLE NETBACKUP.EJECTPOOLS ADD (
  CONSTRAINT EJECTPOOLS 
  FOREIGN KEY (VOLUMEPOOL_ID) 
  REFERENCES NETBACKUP.VOLUMEPOOL (VOLUMEPOOL_ID)
  ENABLE VALIDATE,
  CONSTRAINT R_79 
  FOREIGN KEY (VAULTPROFILE_ID) 
  REFERENCES NETBACKUP.VAULTPROFILE (VAULTPROFILE_ID)
  ENABLE VALIDATE);
ALTER TABLE NETBACKUP.EXCLUDEDATE
 DROP PRIMARY KEY CASCADE;

DROP TABLE NETBACKUP.EXCLUDEDATE CASCADE CONSTRAINTS;

CREATE TABLE NETBACKUP.EXCLUDEDATE
(
  EXDATE        DATE,
  SCHEDULER_ID  INTEGER                         NOT NULL,
  DATE_INSERT   DATE,
  DATE_UPDATE   DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


CREATE UNIQUE INDEX NETBACKUP.PK_EXCLUDEDATE ON NETBACKUP.EXCLUDEDATE
(SCHEDULER_ID, EXDATE)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

ALTER TABLE NETBACKUP.EXCLUDEDATE ADD (
  CONSTRAINT PK_EXCLUDEDATE
  PRIMARY KEY
  (SCHEDULER_ID, EXDATE)
  USING INDEX NETBACKUP.PK_EXCLUDEDATE
  ENABLE VALIDATE);

ALTER TABLE NETBACKUP.EXCLUDEDATE ADD (
  CONSTRAINT R_48 
  FOREIGN KEY (SCHEDULER_ID) 
  REFERENCES NETBACKUP.SCHEDULER (SCHEDULER_ID)
  ENABLE VALIDATE);
ALTER TABLE NETBACKUP.IMAGE
 DROP PRIMARY KEY CASCADE;

DROP TABLE NETBACKUP.IMAGE CASCADE CONSTRAINTS;

CREATE TABLE NETBACKUP.IMAGE
(
  IMAGE_ID         INTEGER                      NOT NULL,
  BACKUPID         VARCHAR2(128 BYTE),
  DATE_INSERT      DATE,
  DATE_UPDATE      DATE,
  CLIENT_ID        INTEGER,
  POLICY_ID        INTEGER,
  NUMBER_OF_FILES  INTEGER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


CREATE INDEX NETBACKUP.IF_IMAGE_CLIENT ON NETBACKUP.IMAGE
(CLIENT_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX NETBACKUP.IF_IMAGE_POLICY ON NETBACKUP.IMAGE
(POLICY_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX NETBACKUP.PK_IMAGE ON NETBACKUP.IMAGE
(IMAGE_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX NETBACKUP.UI_IMAGE_BACKUPID ON NETBACKUP.IMAGE
(BACKUPID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE OR REPLACE TRIGGER NETBACKUP.IMAGE_BI
BEFORE INSERT
ON NETBACKUP.IMAGE
REFERENCING NEW AS New OLD AS Old
FOR EACH ROW
DECLARE
BEGIN
:new.Image_ID := netbackupid_seq.nextval;
END IMAGE_BI;
/


ALTER TABLE NETBACKUP.IMAGE ADD (
  CHECK ("BACKUPID" IS NOT NULL)
  DISABLE NOVALIDATE,
  CONSTRAINT PK_IMAGE
  PRIMARY KEY
  (IMAGE_ID)
  USING INDEX NETBACKUP.PK_IMAGE
  ENABLE VALIDATE);

ALTER TABLE NETBACKUP.IMAGE ADD (
  CONSTRAINT IF_IMAGE_CLIENT 
  FOREIGN KEY (CLIENT_ID) 
  REFERENCES NETBACKUP.HOST (HOST_ID)
  ENABLE VALIDATE,
  CONSTRAINT IF_IMAGE_POLICY 
  FOREIGN KEY (POLICY_ID) 
  REFERENCES NETBACKUP.POLICY (POLICY_ID)
  ENABLE VALIDATE);
ALTER TABLE NETBACKUP.IMAGE_COPY
 DROP PRIMARY KEY CASCADE;

DROP TABLE NETBACKUP.IMAGE_COPY CASCADE CONSTRAINTS;

CREATE TABLE NETBACKUP.IMAGE_COPY
(
  IMAGE_ID     INTEGER                          NOT NULL,
  COPY         INTEGER                          NOT NULL,
  RETENTION    INTEGER,
  EXPIRE_DATE  DATE,
  DATE_INSERT  DATE,
  DATE_UPDATE  DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


CREATE UNIQUE INDEX NETBACKUP.PK_IMAGE_COPY ON NETBACKUP.IMAGE_COPY
(IMAGE_ID, COPY)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

ALTER TABLE NETBACKUP.IMAGE_COPY ADD (
  CONSTRAINT PK_IMAGE_COPY
  PRIMARY KEY
  (IMAGE_ID, COPY)
  USING INDEX NETBACKUP.PK_IMAGE_COPY
  ENABLE VALIDATE);

ALTER TABLE NETBACKUP.IMAGE_COPY ADD (
  CONSTRAINT IF_IMAGE 
  FOREIGN KEY (IMAGE_ID) 
  REFERENCES NETBACKUP.IMAGE (IMAGE_ID)
  ENABLE VALIDATE);
ALTER TABLE NETBACKUP.IMAGE_FRAG
 DROP PRIMARY KEY CASCADE;

DROP TABLE NETBACKUP.IMAGE_FRAG CASCADE CONSTRAINTS;

CREATE TABLE NETBACKUP.IMAGE_FRAG
(
  IMAGE_ID        INTEGER                       NOT NULL,
  COPY            INTEGER                       NOT NULL,
  FRAGMENT        INTEGER                       NOT NULL,
  MEDIA_ID        VARCHAR2(64 BYTE),
  FILE_NUMBER     INTEGER,
  OFFSET          INTEGER,
  KILOBYTES       INTEGER,
  DEVICE_WRITTEN  INTEGER,
  DATE_INSERT     DATE,
  DATE_UPDATE     DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


CREATE INDEX NETBACKUP.IF_MEDIA_ID ON NETBACKUP.IMAGE_FRAG
(MEDIA_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX NETBACKUP.PK_IMAGE_FRAG ON NETBACKUP.IMAGE_FRAG
(IMAGE_ID, COPY, FRAGMENT)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

ALTER TABLE NETBACKUP.IMAGE_FRAG ADD (
  CONSTRAINT PK_IMAGE_FRAG
  PRIMARY KEY
  (IMAGE_ID, COPY, FRAGMENT)
  USING INDEX NETBACKUP.PK_IMAGE_FRAG
  ENABLE VALIDATE);

ALTER TABLE NETBACKUP.IMAGE_FRAG ADD (
  CONSTRAINT IF_IMAGE_COPY 
  FOREIGN KEY (IMAGE_ID, COPY) 
  REFERENCES NETBACKUP.IMAGE_COPY (IMAGE_ID,COPY)
  ENABLE VALIDATE,
  CONSTRAINT IF_MEDIA_ID 
  FOREIGN KEY (MEDIA_ID) 
  REFERENCES NETBACKUP.MEDIA (MEDIA_ID)
  ENABLE VALIDATE);
ALTER TABLE NETBACKUP.JOBDETAIL
 DROP PRIMARY KEY CASCADE;

DROP TABLE NETBACKUP.JOBDETAIL CASCADE CONSTRAINTS;

CREATE TABLE NETBACKUP.JOBDETAIL
(
  JOB_ID       INTEGER,
  TRY          INTEGER,
  NLINE        INTEGER,
  LINESTR      VARCHAR2(4000 BYTE),
  DATE_INSERT  DATE,
  DATE_UPDATE  DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


CREATE UNIQUE INDEX NETBACKUP.PK_JOBDETAIL ON NETBACKUP.JOBDETAIL
(JOB_ID, TRY, NLINE)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

ALTER TABLE NETBACKUP.JOBDETAIL ADD (
  CONSTRAINT PK_JOBDETAIL
  PRIMARY KEY
  (JOB_ID, TRY, NLINE)
  USING INDEX NETBACKUP.PK_JOBDETAIL
  ENABLE VALIDATE);

ALTER TABLE NETBACKUP.JOBDETAIL ADD (
  CONSTRAINT IF_JOBDETAIL_JOB 
  FOREIGN KEY (JOB_ID) 
  REFERENCES NETBACKUP.JOB (JOB_ID)
  ENABLE VALIDATE);
ALTER TABLE NETBACKUP.VAULTBACKUPPOLICIES
 DROP PRIMARY KEY CASCADE;

DROP TABLE NETBACKUP.VAULTBACKUPPOLICIES CASCADE CONSTRAINTS;

CREATE TABLE NETBACKUP.VAULTBACKUPPOLICIES
(
  POLICY_ID        INTEGER                      NOT NULL,
  VAULTPROFILE_ID  INTEGER                      NOT NULL,
  DATE_INSERT      DATE,
  DATE_UPDATE      DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


CREATE UNIQUE INDEX NETBACKUP.PK_VAULTBACKUPPOLICIES ON NETBACKUP.VAULTBACKUPPOLICIES
(POLICY_ID, VAULTPROFILE_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

ALTER TABLE NETBACKUP.VAULTBACKUPPOLICIES ADD (
  CONSTRAINT PK_VAULTBACKUPPOLICIES
  PRIMARY KEY
  (POLICY_ID, VAULTPROFILE_ID)
  USING INDEX NETBACKUP.PK_VAULTBACKUPPOLICIES
  ENABLE VALIDATE);

ALTER TABLE NETBACKUP.VAULTBACKUPPOLICIES ADD (
  CONSTRAINT R_85 
  FOREIGN KEY (VAULTPROFILE_ID) 
  REFERENCES NETBACKUP.VAULTPROFILE (VAULTPROFILE_ID)
  ENABLE VALIDATE,
  CONSTRAINT VAULTBACKUPPOLICIES 
  FOREIGN KEY (POLICY_ID) 
  REFERENCES NETBACKUP.POLICY (POLICY_ID)
  ENABLE VALIDATE);
ALTER TABLE NETBACKUP.VAULTCLIENTS
 DROP PRIMARY KEY CASCADE;

DROP TABLE NETBACKUP.VAULTCLIENTS CASCADE CONSTRAINTS;

CREATE TABLE NETBACKUP.VAULTCLIENTS
(
  HOST_ID          INTEGER                      NOT NULL,
  VAULTPROFILE_ID  INTEGER                      NOT NULL,
  DATE_INSERT      DATE,
  DATE_UPDATE      DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


CREATE UNIQUE INDEX NETBACKUP.PK_VAULTCLIENTS ON NETBACKUP.VAULTCLIENTS
(HOST_ID, VAULTPROFILE_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

ALTER TABLE NETBACKUP.VAULTCLIENTS ADD (
  CONSTRAINT PK_VAULTCLIENTS
  PRIMARY KEY
  (HOST_ID, VAULTPROFILE_ID)
  USING INDEX NETBACKUP.PK_VAULTCLIENTS
  ENABLE VALIDATE);

ALTER TABLE NETBACKUP.VAULTCLIENTS ADD (
  CONSTRAINT R_81 
  FOREIGN KEY (VAULTPROFILE_ID) 
  REFERENCES NETBACKUP.VAULTPROFILE (VAULTPROFILE_ID)
  ENABLE VALIDATE,
  CONSTRAINT VAULTCLIENTS 
  FOREIGN KEY (HOST_ID) 
  REFERENCES NETBACKUP.HOST (HOST_ID)
  ENABLE VALIDATE);
ALTER TABLE NETBACKUP.VAULTMEDIASERVERS
 DROP PRIMARY KEY CASCADE;

DROP TABLE NETBACKUP.VAULTMEDIASERVERS CASCADE CONSTRAINTS;

CREATE TABLE NETBACKUP.VAULTMEDIASERVERS
(
  HOST_ID          INTEGER                      NOT NULL,
  VAULTPROFILE_ID  INTEGER                      NOT NULL,
  DATE_INSERT      DATE,
  DATE_UPDATE      DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


CREATE UNIQUE INDEX NETBACKUP.PK_VAULTMEDIASERVERS ON NETBACKUP.VAULTMEDIASERVERS
(HOST_ID, VAULTPROFILE_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

ALTER TABLE NETBACKUP.VAULTMEDIASERVERS ADD (
  CONSTRAINT PK_VAULTMEDIASERVERS
  PRIMARY KEY
  (HOST_ID, VAULTPROFILE_ID)
  USING INDEX NETBACKUP.PK_VAULTMEDIASERVERS
  ENABLE VALIDATE);

ALTER TABLE NETBACKUP.VAULTMEDIASERVERS ADD (
  CONSTRAINT R_83 
  FOREIGN KEY (VAULTPROFILE_ID) 
  REFERENCES NETBACKUP.VAULTPROFILE (VAULTPROFILE_ID)
  ENABLE VALIDATE,
  CONSTRAINT VAULTMEDIASERVERS 
  FOREIGN KEY (HOST_ID) 
  REFERENCES NETBACKUP.HOST (HOST_ID)
  ENABLE VALIDATE);
ALTER TABLE NETBACKUP.VAULTMGMT
 DROP PRIMARY KEY CASCADE;

DROP TABLE NETBACKUP.VAULTMGMT CASCADE CONSTRAINTS;

CREATE TABLE NETBACKUP.VAULTMGMT
(
  EJECT_NOTIFICATION    VARCHAR2(64 BYTE),
  SESSION_NOTIFICATION  VARCHAR2(64 BYTE),
  LOOKBACK_DAYS         INTEGER,
  EJECT_SORTED          VARCHAR2(64 BYTE),
  VAULTMGMT_ID          INTEGER                 NOT NULL,
  MASTER_ID             INTEGER                 NOT NULL,
  DATE_INSERT           DATE,
  DATE_UPDATE           DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


CREATE UNIQUE INDEX NETBACKUP.PK_VAULTMGMT ON NETBACKUP.VAULTMGMT
(VAULTMGMT_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE OR REPLACE TRIGGER NETBACKUP.VAULTMGMT_BI
  BEFORE INSERT
  ON NETBACKUP.VAULTMGMT
  for each row
BEGIN
:new.VaultMgmt_ID := netbackupid_seq.nextval;
END;
/


ALTER TABLE NETBACKUP.VAULTMGMT ADD (
  CONSTRAINT PK_VAULTMGMT
  PRIMARY KEY
  (VAULTMGMT_ID)
  USING INDEX NETBACKUP.PK_VAULTMGMT
  ENABLE VALIDATE);
ALTER TABLE NETBACKUP.VAULTROBOT
 DROP PRIMARY KEY CASCADE;

DROP TABLE NETBACKUP.VAULTROBOT CASCADE CONSTRAINTS;

CREATE TABLE NETBACKUP.VAULTROBOT
(
  ROBOT_ID     INTEGER                          NOT NULL,
  CONTROLHOST  INTEGER                          NOT NULL,
  EMAIL        VARCHAR2(64 BYTE),
  DATE_INSERT  DATE,
  DATE_UPDATE  DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


CREATE INDEX NETBACKUP.IF_VAULTROBOT_CONTROLHOST ON NETBACKUP.VAULTROBOT
(CONTROLHOST)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX NETBACKUP.PK_VAULTROBOT ON NETBACKUP.VAULTROBOT
(ROBOT_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

ALTER TABLE NETBACKUP.VAULTROBOT ADD (
  CONSTRAINT PK_VAULTROBOT
  PRIMARY KEY
  (ROBOT_ID)
  USING INDEX NETBACKUP.PK_VAULTROBOT
  ENABLE VALIDATE);

ALTER TABLE NETBACKUP.VAULTROBOT ADD (
  CONSTRAINT R_70 
  FOREIGN KEY (ROBOT_ID) 
  REFERENCES NETBACKUP.ROBOT (ROBOT_ID)
  ENABLE VALIDATE,
  CONSTRAINT R_71 
  FOREIGN KEY (CONTROLHOST) 
  REFERENCES NETBACKUP.HOST (HOST_ID)
  ENABLE VALIDATE);
ALTER TABLE NETBACKUP.VOLUMEGROUP
 DROP PRIMARY KEY CASCADE;

DROP TABLE NETBACKUP.VOLUMEGROUP CASCADE CONSTRAINTS;

CREATE TABLE NETBACKUP.VOLUMEGROUP
(
  NAME            VARCHAR2(64 BYTE),
  MEDIA_TYPE      VARCHAR2(64 BYTE),
  ROBOT_ID        INTEGER,
  VOLUMEGROUP_ID  INTEGER                       NOT NULL,
  MASTER_ID       INTEGER                       NOT NULL,
  DATE_INSERT     DATE,
  DATE_UPDATE     DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


CREATE INDEX NETBACKUP.IF_VOLUMEGROUP_ROBOT ON NETBACKUP.VOLUMEGROUP
(ROBOT_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX NETBACKUP.PK_VOLUMEGROUP ON NETBACKUP.VOLUMEGROUP
(VOLUMEGROUP_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX NETBACKUP.UI_VOLUMEGROUP_NAME_MASTER ON NETBACKUP.VOLUMEGROUP
(NAME, MASTER_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE OR REPLACE TRIGGER NETBACKUP.VOLUMEGROUP_BI
  BEFORE INSERT
  ON NETBACKUP.VOLUMEGROUP
  for each row
BEGIN
:new.VolumeGroup_ID := netbackupid_seq.nextval;
END;
/


ALTER TABLE NETBACKUP.VOLUMEGROUP ADD (
  CONSTRAINT PK_VOLUMEGROUP
  PRIMARY KEY
  (VOLUMEGROUP_ID)
  USING INDEX NETBACKUP.PK_VOLUMEGROUP
  ENABLE VALIDATE);

ALTER TABLE NETBACKUP.VOLUMEGROUP ADD (
  CONSTRAINT R_11 
  FOREIGN KEY (ROBOT_ID) 
  REFERENCES NETBACKUP.ROBOT (ROBOT_ID)
  ENABLE VALIDATE);
ALTER TABLE NETBACKUP.VOLUMEPOOL
 DROP PRIMARY KEY CASCADE;

DROP TABLE NETBACKUP.VOLUMEPOOL CASCADE CONSTRAINTS;

CREATE TABLE NETBACKUP.VOLUMEPOOL
(
  DESCRIPTION        VARCHAR2(64 BYTE),
  IS_CATALOG         INTEGER,
  NAME               VARCHAR2(64 BYTE),
  IS_SCRATCH         INTEGER,
  SPECIFIED_HOST_ID  INTEGER,
  VOLUMEPOOL_ID      INTEGER                    NOT NULL,
  MASTER_ID          INTEGER                    NOT NULL,
  DATE_INSERT        DATE,
  DATE_UPDATE        DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


CREATE INDEX NETBACKUP.IF_VOLUMEPOOL_HOST ON NETBACKUP.VOLUMEPOOL
(SPECIFIED_HOST_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX NETBACKUP.PK_VOLUMEPOOL ON NETBACKUP.VOLUMEPOOL
(VOLUMEPOOL_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX NETBACKUP.UI_VOLUMEPOOL_NAME_MASTER ON NETBACKUP.VOLUMEPOOL
(NAME, MASTER_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE OR REPLACE TRIGGER NETBACKUP.VOLUMEPOOL_BI
  BEFORE INSERT
  ON NETBACKUP.VOLUMEPOOL
  for each row
BEGIN
:new.VolumePool_ID := netbackupid_seq.nextval;
END;
/


ALTER TABLE NETBACKUP.VOLUMEPOOL ADD (
  CONSTRAINT PK_VOLUMEPOOL
  PRIMARY KEY
  (VOLUMEPOOL_ID)
  USING INDEX NETBACKUP.PK_VOLUMEPOOL
  ENABLE VALIDATE);

ALTER TABLE NETBACKUP.VOLUMEPOOL ADD (
  CONSTRAINT R_14 
  FOREIGN KEY (SPECIFIED_HOST_ID) 
  REFERENCES NETBACKUP.HOST (HOST_ID)
  ENABLE VALIDATE);
ALTER TABLE NETBACKUP.DRIVE
 DROP PRIMARY KEY CASCADE;

DROP TABLE NETBACKUP.DRIVE CASCADE CONSTRAINTS;

CREATE TABLE NETBACKUP.DRIVE
(
  NAME           VARCHAR2(64 BYTE)              NOT NULL,
  TYPE           VARCHAR2(64 BYTE),
  SERIAL_NUMBER  VARCHAR2(64 BYTE),
  INQUIRY        VARCHAR2(64 BYTE),
  ROBOT_ID       INTEGER,
  DRIVE_ID       INTEGER                        NOT NULL,
  DATE_INSERT    DATE,
  DATE_UPDATE    DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


CREATE INDEX NETBACKUP.IF_DRIVE_ROBOT ON NETBACKUP.DRIVE
(ROBOT_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX NETBACKUP.PK_DRIVE ON NETBACKUP.DRIVE
(DRIVE_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX NETBACKUP.UI_DRIVE_NAME ON NETBACKUP.DRIVE
(NAME)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE OR REPLACE TRIGGER NETBACKUP.DRIVE_BI
  BEFORE INSERT
  ON NETBACKUP.DRIVE
  for each row
BEGIN
:new.Drive_Id := netbackupid_seq.nextval;
END;
/


ALTER TABLE NETBACKUP.DRIVE ADD (
  CONSTRAINT PK_DRIVE
  PRIMARY KEY
  (DRIVE_ID)
  USING INDEX NETBACKUP.PK_DRIVE
  ENABLE VALIDATE);

ALTER TABLE NETBACKUP.DRIVE ADD (
  CONSTRAINT R_7 
  FOREIGN KEY (ROBOT_ID) 
  REFERENCES NETBACKUP.ROBOT (ROBOT_ID)
  ENABLE VALIDATE);
ALTER TABLE NETBACKUP.MEDIA
 DROP PRIMARY KEY CASCADE;

DROP TABLE NETBACKUP.MEDIA CASCADE CONSTRAINTS;

CREATE TABLE NETBACKUP.MEDIA
(
  MEDIA_ID         VARCHAR2(64 BYTE)            NOT NULL,
  BARCODE          VARCHAR2(64 BYTE),
  SLOT             INTEGER,
  MEDIA_STATUS     VARCHAR2(64 BYTE),
  MOUNTS           INTEGER,
  TIME_ASSIGNED    DATE,
  FIRST_MOUNT      DATE,
  LAST_MOUNT       DATE,
  CREATED          DATE,
  LAST_WRITTEN     DATE,
  LAST_READ        DATE,
  DATE_EXPIRATION  DATE,
  KILOBYTES        NUMBER,
  IMAGES           INTEGER,
  VALID_IMAGES     INTEGER,
  RETENTION        INTEGER,
  VOLUMEGROUP_ID   INTEGER,
  VOLUMEPOOL_ID    INTEGER,
  MEDIA_SERVER_ID  INTEGER,
  RESTORES         INTEGER,
  MASTER_ID        INTEGER                      NOT NULL,
  DATE_INSERT      DATE,
  DATE_UPDATE      DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


CREATE INDEX NETBACKUP.IF_MEDIA_MEDIAS ON NETBACKUP.MEDIA
(MEDIA_SERVER_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX NETBACKUP.IF_MEDIA_VOLUMEGROUP ON NETBACKUP.MEDIA
(VOLUMEGROUP_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX NETBACKUP.IF_MEDIA_VOLUMEPOOL ON NETBACKUP.MEDIA
(VOLUMEPOOL_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX NETBACKUP.PK_MEDIA ON NETBACKUP.MEDIA
(MEDIA_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

ALTER TABLE NETBACKUP.MEDIA ADD (
  CONSTRAINT PK_MEDIA
  PRIMARY KEY
  (MEDIA_ID)
  USING INDEX NETBACKUP.PK_MEDIA
  ENABLE VALIDATE);

ALTER TABLE NETBACKUP.MEDIA ADD (
  CONSTRAINT R_16 
  FOREIGN KEY (VOLUMEGROUP_ID) 
  REFERENCES NETBACKUP.VOLUMEGROUP (VOLUMEGROUP_ID)
  ENABLE VALIDATE,
  CONSTRAINT R_17 
  FOREIGN KEY (VOLUMEPOOL_ID) 
  REFERENCES NETBACKUP.VOLUMEPOOL (VOLUMEPOOL_ID)
  ENABLE VALIDATE,
  CONSTRAINT R_55 
  FOREIGN KEY (MEDIA_SERVER_ID) 
  REFERENCES NETBACKUP.HOST (HOST_ID)
  ENABLE VALIDATE);
ALTER TABLE NETBACKUP.PATH
 DROP PRIMARY KEY CASCADE;

DROP TABLE NETBACKUP.PATH CASCADE CONSTRAINTS;

CREATE TABLE NETBACKUP.PATH
(
  DRIVE_PATH   VARCHAR2(64 BYTE),
  STATUS       VARCHAR2(64 BYTE),
  HOST_ID      INTEGER                          NOT NULL,
  DRIVE_ID     INTEGER                          NOT NULL,
  DRIVE_INDEX  INTEGER,
  DATE_INSERT  DATE,
  DATE_UPDATE  DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;

COMMENT ON COLUMN NETBACKUP.PATH.DRIVE_INDEX IS 'Drive Index';


CREATE INDEX NETBACKUP.IF_PATH_DRIVE ON NETBACKUP.PATH
(DRIVE_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX NETBACKUP.IF_PATH_HOST ON NETBACKUP.PATH
(HOST_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX NETBACKUP.PK_PATH ON NETBACKUP.PATH
(HOST_ID, DRIVE_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

ALTER TABLE NETBACKUP.PATH ADD (
  CONSTRAINT PK_PATH
  PRIMARY KEY
  (HOST_ID, DRIVE_ID)
  USING INDEX NETBACKUP.PK_PATH
  ENABLE VALIDATE);

ALTER TABLE NETBACKUP.PATH ADD (
  CONSTRAINT R_10 
  FOREIGN KEY (DRIVE_ID) 
  REFERENCES NETBACKUP.DRIVE (DRIVE_ID)
  ENABLE VALIDATE,
  CONSTRAINT R_8 
  FOREIGN KEY (HOST_ID) 
  REFERENCES NETBACKUP.HOST (HOST_ID)
  ENABLE VALIDATE);
ALTER TABLE NETBACKUP.POLICY
 DROP PRIMARY KEY CASCADE;

DROP TABLE NETBACKUP.POLICY CASCADE CONSTRAINTS;

CREATE TABLE NETBACKUP.POLICY
(
  NAME             VARCHAR2(64 BYTE),
  TYPE             VARCHAR2(64 BYTE),
  JOB_PRIORITY     INTEGER,
  MAX_JOBS         INTEGER,
  ACTIVE           INTEGER,
  ACTIVE_START     DATE,
  COMPRESSION      INTEGER,
  ENCRYPTION       INTEGER,
  KEYWORD          VARCHAR2(64 BYTE),
  VOLUMEPOOL_ID    INTEGER,
  STORAGEUNIT_ID   INTEGER,
  POLICY_ID        INTEGER                      NOT NULL,
  BLOCK_INCR       INTEGER,
  SNAPSHOT_BK      INTEGER,
  SNAPSHOT_METHOD  VARCHAR2(64 BYTE),
  OFFHOST_BK       INTEGER,
  ALT_CLIENT_ID    INTEGER,
  USE_VM           INTEGER,
  MASTER_ID        INTEGER                      NOT NULL,
  DATE_INSERT      DATE,
  DATE_UPDATE      DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;

COMMENT ON COLUMN NETBACKUP.POLICY.BLOCK_INCR IS 'Block Level Incremental';

COMMENT ON COLUMN NETBACKUP.POLICY.SNAPSHOT_BK IS 'Perform Snapshot Backup';

COMMENT ON COLUMN NETBACKUP.POLICY.SNAPSHOT_METHOD IS 'Snapshot Method';

COMMENT ON COLUMN NETBACKUP.POLICY.OFFHOST_BK IS 'Perform Offhost Backup';

COMMENT ON COLUMN NETBACKUP.POLICY.ALT_CLIENT_ID IS 'Alternate Client';

COMMENT ON COLUMN NETBACKUP.POLICY.USE_VM IS 'Use Virtual Machine';


CREATE INDEX NETBACKUP.IF_POLICY_ALT_CLIENT ON NETBACKUP.POLICY
(ALT_CLIENT_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX NETBACKUP.IF_POLICY_SU ON NETBACKUP.POLICY
(STORAGEUNIT_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX NETBACKUP.IF_POLICY_VOLUMEPOOL ON NETBACKUP.POLICY
(VOLUMEPOOL_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX NETBACKUP.PK_POLICY ON NETBACKUP.POLICY
(POLICY_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX NETBACKUP.UI_POLICY_NAME_NASTER ON NETBACKUP.POLICY
(NAME, MASTER_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE OR REPLACE TRIGGER NETBACKUP.POLICY_BI
  BEFORE INSERT
  ON NETBACKUP.POLICY
  for each row
BEGIN
:new.Policy_ID := netbackupid_seq.nextval;
END;
/


ALTER TABLE NETBACKUP.POLICY ADD (
  CONSTRAINT PK_POLICY
  PRIMARY KEY
  (POLICY_ID)
  USING INDEX NETBACKUP.PK_POLICY
  ENABLE VALIDATE);

ALTER TABLE NETBACKUP.POLICY ADD (
  CONSTRAINT POLICY_ALT_CLIENT 
  FOREIGN KEY (ALT_CLIENT_ID) 
  REFERENCES NETBACKUP.HOST (HOST_ID)
  ENABLE VALIDATE,
  CONSTRAINT R_39 
  FOREIGN KEY (VOLUMEPOOL_ID) 
  REFERENCES NETBACKUP.VOLUMEPOOL (VOLUMEPOOL_ID)
  ENABLE VALIDATE,
  CONSTRAINT R_40 
  FOREIGN KEY (STORAGEUNIT_ID) 
  REFERENCES NETBACKUP.STORAGEUNIT (STORAGEUNIT_ID)
  ENABLE VALIDATE);
ALTER TABLE NETBACKUP.SCHEDULER
 DROP PRIMARY KEY CASCADE;

DROP TABLE NETBACKUP.SCHEDULER CASCADE CONSTRAINTS;

CREATE TABLE NETBACKUP.SCHEDULER
(
  NAME             VARCHAR2(64 BYTE)            NOT NULL,
  BACKUP_TYPE      VARCHAR2(64 BYTE),
  IS_CALENDAR      INTEGER,
  FREQUENCY_COUNT  INTEGER,
  MEDIA_MULT       INTEGER,
  COPIES           INTEGER,
  DUPL_PRIORITY    INTEGER,
  POLICY_ID        INTEGER                      NOT NULL,
  SCHEDULER_ID     INTEGER                      NOT NULL,
  DATE_INSERT      DATE,
  DATE_UPDATE      DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


CREATE INDEX NETBACKUP.IF_SCHEDULER_POLICY ON NETBACKUP.SCHEDULER
(POLICY_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX NETBACKUP.PK_SCHEDULER ON NETBACKUP.SCHEDULER
(SCHEDULER_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX NETBACKUP.UI_SCHEDULER_NAME ON NETBACKUP.SCHEDULER
(POLICY_ID, NAME)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE OR REPLACE TRIGGER NETBACKUP.SCHEDULER_BI
  BEFORE INSERT
  ON NETBACKUP.SCHEDULER
  for each row
BEGIN
:new.Scheduler_ID := netbackupid_seq.nextval;
END;
/


ALTER TABLE NETBACKUP.SCHEDULER ADD (
  CONSTRAINT PK_SCHEDULER
  PRIMARY KEY
  (SCHEDULER_ID)
  USING INDEX NETBACKUP.PK_SCHEDULER
  ENABLE VALIDATE);

ALTER TABLE NETBACKUP.SCHEDULER ADD (
  CONSTRAINT R_26 
  FOREIGN KEY (POLICY_ID) 
  REFERENCES NETBACKUP.POLICY (POLICY_ID)
  ENABLE VALIDATE);
ALTER TABLE NETBACKUP.SELECTION
 DROP PRIMARY KEY CASCADE;

DROP TABLE NETBACKUP.SELECTION CASCADE CONSTRAINTS;

CREATE TABLE NETBACKUP.SELECTION
(
  LIST_ITEM    VARCHAR2(1024 BYTE),
  LIST_ID      INTEGER                          NOT NULL,
  POLICY_ID    INTEGER                          NOT NULL,
  DATE_INSERT  DATE,
  DATE_UPDATE  DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


CREATE INDEX NETBACKUP.IF_SELECTION_POLICY ON NETBACKUP.SELECTION
(POLICY_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX NETBACKUP.PK_SELECTION ON NETBACKUP.SELECTION
(LIST_ID, POLICY_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

ALTER TABLE NETBACKUP.SELECTION ADD (
  CONSTRAINT PK_SELECTION
  PRIMARY KEY
  (LIST_ID, POLICY_ID)
  USING INDEX NETBACKUP.PK_SELECTION
  ENABLE VALIDATE);

ALTER TABLE NETBACKUP.SELECTION ADD (
  CONSTRAINT R_28 
  FOREIGN KEY (POLICY_ID) 
  REFERENCES NETBACKUP.POLICY (POLICY_ID)
  ENABLE VALIDATE);
ALTER TABLE NETBACKUP.SLP_DETAIL
 DROP PRIMARY KEY CASCADE;

DROP TABLE NETBACKUP.SLP_DETAIL CASCADE CONSTRAINTS;

CREATE TABLE NETBACKUP.SLP_DETAIL
(
  SLP_ID           INTEGER                      NOT NULL,
  OPER_INDEX       INTEGER                      NOT NULL,
  STORAGE_ID       INTEGER,
  VOLUMEPOOL_ID    INTEGER,
  RETENTION_TYPE   INTEGER,
  RETENTION_ID     INTEGER,
  ALT_READ_ID      INTEGER,
  MULTIPLEX        INTEGER,
  REMOTE_IMPORT    INTEGER,
  SOURCE_INDEX     INTEGER,
  DEF_DUPLICATION  INTEGER,
  OPER_NAME        VARCHAR2(16 BYTE),
  STATE            VARCHAR2(16 BYTE),
  WINDOW_NAME      VARCHAR2(64 BYTE),
  WINDOW_CLOSE     VARCHAR2(16 BYTE),
  DATE_INSERT      DATE,
  DATE_UPDATE      DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;

COMMENT ON COLUMN NETBACKUP.SLP_DETAIL.RETENTION_TYPE IS 'Retention Type';

COMMENT ON COLUMN NETBACKUP.SLP_DETAIL.RETENTION_ID IS 'Retention Level';

COMMENT ON COLUMN NETBACKUP.SLP_DETAIL.ALT_READ_ID IS 'Alternate Read Server';

COMMENT ON COLUMN NETBACKUP.SLP_DETAIL.MULTIPLEX IS 'Preserve Multiplexing';

COMMENT ON COLUMN NETBACKUP.SLP_DETAIL.REMOTE_IMPORT IS 'Enable Automatic Remote Import';

COMMENT ON COLUMN NETBACKUP.SLP_DETAIL.DEF_DUPLICATION IS 'Deferred Duplication';

COMMENT ON COLUMN NETBACKUP.SLP_DETAIL.OPER_NAME IS 'Use for';

COMMENT ON COLUMN NETBACKUP.SLP_DETAIL.WINDOW_CLOSE IS 'Window Close Option';


CREATE INDEX NETBACKUP.IF_SLP_ALT_READ ON NETBACKUP.SLP_DETAIL
(ALT_READ_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX NETBACKUP.IF_SLP_RETENTION ON NETBACKUP.SLP_DETAIL
(RETENTION_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX NETBACKUP.IF_SLP_STORAGE ON NETBACKUP.SLP_DETAIL
(STORAGE_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX NETBACKUP.IF_SLP_VOLUMEPOOL ON NETBACKUP.SLP_DETAIL
(VOLUMEPOOL_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX NETBACKUP.PK_SLPDETAIL ON NETBACKUP.SLP_DETAIL
(SLP_ID, OPER_INDEX)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

ALTER TABLE NETBACKUP.SLP_DETAIL ADD (
  CONSTRAINT PK_SLPDETAIL
  PRIMARY KEY
  (SLP_ID, OPER_INDEX)
  USING INDEX NETBACKUP.PK_SLPDETAIL
  ENABLE VALIDATE);

ALTER TABLE NETBACKUP.SLP_DETAIL ADD (
  CONSTRAINT SLP_ALTERNATE_READ 
  FOREIGN KEY (ALT_READ_ID) 
  REFERENCES NETBACKUP.HOST (HOST_ID)
  ENABLE VALIDATE,
  CONSTRAINT SLP_ID 
  FOREIGN KEY (SLP_ID) 
  REFERENCES NETBACKUP.STORAGEUNIT (STORAGEUNIT_ID)
  ENABLE VALIDATE,
  CONSTRAINT SLP_RETENTION 
  FOREIGN KEY (RETENTION_ID) 
  REFERENCES NETBACKUP.RETENTION (RETENTION_ID)
  ENABLE VALIDATE,
  CONSTRAINT SLP_STORAGE 
  FOREIGN KEY (STORAGE_ID) 
  REFERENCES NETBACKUP.STORAGEUNIT (STORAGEUNIT_ID)
  ENABLE VALIDATE,
  CONSTRAINT SLP_VOLUMEPOOL 
  FOREIGN KEY (VOLUMEPOOL_ID) 
  REFERENCES NETBACKUP.VOLUMEPOOL (VOLUMEPOOL_ID)
  ENABLE VALIDATE);
ALTER TABLE NETBACKUP.VAULT
 DROP PRIMARY KEY CASCADE;

DROP TABLE NETBACKUP.VAULT CASCADE CONSTRAINTS;

CREATE TABLE NETBACKUP.VAULT
(
  NAME              VARCHAR2(64 BYTE),
  VENDOR            VARCHAR2(64 BYTE),
  CUSTOMER_ID       VARCHAR2(64 BYTE),
  ROBOTIC_GROUP_ID  INTEGER,
  OFFSITE_GROUP_ID  INTEGER,
  VAULT_ID          INTEGER                     NOT NULL,
  ROBOT_ID          INTEGER                     NOT NULL,
  MASTER_ID         INTEGER                     NOT NULL,
  DATE_INSERT       DATE,
  DATE_UPDATE       DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


CREATE INDEX NETBACKUP.IF_VAULT_OFFSITEG ON NETBACKUP.VAULT
(OFFSITE_GROUP_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX NETBACKUP.IF_VAULT_ROBOTICG ON NETBACKUP.VAULT
(ROBOTIC_GROUP_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX NETBACKUP.IF_VAULT_ROBOTN ON NETBACKUP.VAULT
(ROBOT_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX NETBACKUP.PK_VAULT ON NETBACKUP.VAULT
(VAULT_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX NETBACKUP.UI_VAULT_NAME_MASTER ON NETBACKUP.VAULT
(NAME, MASTER_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE OR REPLACE TRIGGER NETBACKUP.VAULT_BI
  BEFORE INSERT
  ON NETBACKUP.VAULT
  for each row
BEGIN
:new.Vault_ID := netbackupid_seq.nextval;
END;
/


ALTER TABLE NETBACKUP.VAULT ADD (
  CONSTRAINT PK_VAULT
  PRIMARY KEY
  (VAULT_ID)
  USING INDEX NETBACKUP.PK_VAULT
  ENABLE VALIDATE);

ALTER TABLE NETBACKUP.VAULT ADD (
  CONSTRAINT R_51 
  FOREIGN KEY (ROBOTIC_GROUP_ID) 
  REFERENCES NETBACKUP.VOLUMEGROUP (VOLUMEGROUP_ID)
  ENABLE VALIDATE,
  CONSTRAINT R_52 
  FOREIGN KEY (OFFSITE_GROUP_ID) 
  REFERENCES NETBACKUP.VOLUMEGROUP (VOLUMEGROUP_ID)
  ENABLE VALIDATE);
ALTER TABLE NETBACKUP.VAULTPROFILE
 DROP PRIMARY KEY CASCADE;

DROP TABLE NETBACKUP.VAULTPROFILE CASCADE CONSTRAINTS;

CREATE TABLE NETBACKUP.VAULTPROFILE
(
  VAULTPROFILE_ID     INTEGER                   NOT NULL,
  NAME                VARCHAR2(64 BYTE),
  VAULT_ID            INTEGER                   NOT NULL,
  CATALOGBKPOLICY     INTEGER,
  CATALOGBKSCHEDULER  INTEGER,
  BACKUPDAY1          INTEGER,
  BACKUPHOUR1         INTEGER,
  BACKUPDAY2          INTEGER,
  BACKUPHOUR2         INTEGER,
  ADVANCEDCRITERIA    INTEGER                   NOT NULL,
  BACKUPTYPE          VARCHAR2(64 BYTE),
  IMMEDEJECT          INTEGER                   NOT NULL,
  EMAIL               VARCHAR2(128 BYTE),
  SUSPENDIMMED        INTEGER                   NOT NULL,
  SUSPENDNEXTSES1     INTEGER,
  SUSPENDNEXTSES2     INTEGER,
  IMMEDREPORTS        INTEGER                   NOT NULL,
  IRONMOUNTAIN        VARCHAR2(64 BYTE),
  REPORTHEADER        VARCHAR2(64 BYTE),
  USEVMREPORT         INTEGER                   NOT NULL,
  DATE_INSERT         DATE,
  DATE_UPDATE         DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


CREATE INDEX NETBACKUP.IF_VAULTPROFILE_CATALOGBKP ON NETBACKUP.VAULTPROFILE
(CATALOGBKPOLICY)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX NETBACKUP.IF_VAULTPROFILE_CATALOGBKS ON NETBACKUP.VAULTPROFILE
(CATALOGBKSCHEDULER)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX NETBACKUP.IF_VAULTPROFILE_VAULT ON NETBACKUP.VAULTPROFILE
(VAULT_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX NETBACKUP.PK_VAULTPROFILE ON NETBACKUP.VAULTPROFILE
(VAULTPROFILE_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX NETBACKUP.UI_VAULTPROFILE_NAME ON NETBACKUP.VAULTPROFILE
(VAULT_ID, NAME)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE OR REPLACE TRIGGER NETBACKUP.VAULTPROFILE_BI
  BEFORE INSERT
  ON NETBACKUP.VAULTPROFILE
  for each row
BEGIN
:new.VaultProfile_ID := netbackupid_seq.nextval;
END;
/


ALTER TABLE NETBACKUP.VAULTPROFILE ADD (
  CONSTRAINT PK_VAULTPROFILE
  PRIMARY KEY
  (VAULTPROFILE_ID)
  USING INDEX NETBACKUP.PK_VAULTPROFILE
  ENABLE VALIDATE);

ALTER TABLE NETBACKUP.VAULTPROFILE ADD (
  CONSTRAINT R_57 
  FOREIGN KEY (VAULT_ID) 
  REFERENCES NETBACKUP.VAULT (VAULT_ID)
  ENABLE VALIDATE,
  CONSTRAINT R_60 
  FOREIGN KEY (CATALOGBKPOLICY) 
  REFERENCES NETBACKUP.POLICY (POLICY_ID)
  ENABLE VALIDATE,
  CONSTRAINT R_61 
  FOREIGN KEY (CATALOGBKSCHEDULER) 
  REFERENCES NETBACKUP.SCHEDULER (SCHEDULER_ID)
  ENABLE VALIDATE);
ALTER TABLE NETBACKUP.VAULTREPORT
 DROP PRIMARY KEY CASCADE;

DROP TABLE NETBACKUP.VAULTREPORT CASCADE CONSTRAINTS;

CREATE TABLE NETBACKUP.VAULTREPORT
(
  VAULTREPORT_ID   INTEGER                      NOT NULL,
  NAME             VARCHAR2(64 BYTE),
  TITLE            INTEGER,
  EMAIL            VARCHAR2(128 BYTE),
  FILEOUT          VARCHAR2(64 BYTE),
  PRINT            VARCHAR2(64 BYTE),
  PERIOD1          INTEGER,
  PERIOD2          INTEGER,
  VAULTPROFILE_ID  INTEGER,
  MASTER_ID        INTEGER                      NOT NULL,
  DATE_INSERT      DATE,
  DATE_UPDATE      DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


CREATE INDEX NETBACKUP.IF_VAULTREPORT_VAULTPROFILE ON NETBACKUP.VAULTREPORT
(VAULTPROFILE_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX NETBACKUP.PK_VAULTREPORT ON NETBACKUP.VAULTREPORT
(VAULTREPORT_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE OR REPLACE TRIGGER NETBACKUP.VAULTREPORT_BI
  BEFORE INSERT
  ON NETBACKUP.VAULTREPORT
  for each row
BEGIN
:new.VaultReport_ID := netbackupid_seq.nextval;
END;
/


ALTER TABLE NETBACKUP.VAULTREPORT ADD (
  CONSTRAINT PK_VAULTREPORT
  PRIMARY KEY
  (VAULTREPORT_ID)
  USING INDEX NETBACKUP.PK_VAULTREPORT
  ENABLE VALIDATE);

ALTER TABLE NETBACKUP.VAULTREPORT ADD (
  CONSTRAINT R_74 
  FOREIGN KEY (VAULTPROFILE_ID) 
  REFERENCES NETBACKUP.VAULTPROFILE (VAULTPROFILE_ID)
  ENABLE VALIDATE,
  CONSTRAINT R_75 
  FOREIGN KEY (VAULTPROFILE_ID) 
  REFERENCES NETBACKUP.VAULTMGMT (VAULTMGMT_ID)
  ENABLE VALIDATE);
ALTER TABLE NETBACKUP.VAULTSCHEDULERS
 DROP PRIMARY KEY CASCADE;

DROP TABLE NETBACKUP.VAULTSCHEDULERS CASCADE CONSTRAINTS;

CREATE TABLE NETBACKUP.VAULTSCHEDULERS
(
  SCHEDULER_ID     INTEGER                      NOT NULL,
  VAULTPROFILE_ID  INTEGER                      NOT NULL,
  DATE_INSERT      DATE,
  DATE_UPDATE      DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


CREATE UNIQUE INDEX NETBACKUP.PK_VAULTSCHEDULERS ON NETBACKUP.VAULTSCHEDULERS
(SCHEDULER_ID, VAULTPROFILE_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

ALTER TABLE NETBACKUP.VAULTSCHEDULERS ADD (
  CONSTRAINT PK_VAULTSCHEDULERS
  PRIMARY KEY
  (SCHEDULER_ID, VAULTPROFILE_ID)
  USING INDEX NETBACKUP.PK_VAULTSCHEDULERS
  ENABLE VALIDATE);

ALTER TABLE NETBACKUP.VAULTSCHEDULERS ADD (
  CONSTRAINT R_87 
  FOREIGN KEY (VAULTPROFILE_ID) 
  REFERENCES NETBACKUP.VAULTPROFILE (VAULTPROFILE_ID)
  ENABLE VALIDATE,
  CONSTRAINT VAULTSCHEDULERS 
  FOREIGN KEY (SCHEDULER_ID) 
  REFERENCES NETBACKUP.SCHEDULER (SCHEDULER_ID)
  ENABLE VALIDATE);
ALTER TABLE NETBACKUP.VAULT_RETENMAP
 DROP PRIMARY KEY CASCADE;

DROP TABLE NETBACKUP.VAULT_RETENMAP CASCADE CONSTRAINTS;

CREATE TABLE NETBACKUP.VAULT_RETENMAP
(
  ORIG_LEVEL     INTEGER,
  VAULT_LEVEL    INTEGER,
  VAULT_ID       INTEGER,
  VAULTRETEN_ID  INTEGER                        NOT NULL,
  MASTER_ID      INTEGER                        NOT NULL,
  DATE_INSERT    DATE,
  DATE_UPDATE    DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


CREATE INDEX NETBACKUP.IF_VAULT_RETENMAP_VAULT ON NETBACKUP.VAULT_RETENMAP
(VAULT_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX NETBACKUP.PK_VAULT_RETENMAP ON NETBACKUP.VAULT_RETENMAP
(VAULTRETEN_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE OR REPLACE TRIGGER NETBACKUP.VAULT_RETENMAP_BI
  BEFORE INSERT
  ON NETBACKUP.VAULT_RETENMAP
  for each row
BEGIN
:new.VaultReten_ID := netbackupid_seq.nextval;
END;
/


ALTER TABLE NETBACKUP.VAULT_RETENMAP ADD (
  CONSTRAINT PK_VAULT_RETENMAP
  PRIMARY KEY
  (VAULTRETEN_ID)
  USING INDEX NETBACKUP.PK_VAULT_RETENMAP
  ENABLE VALIDATE);

ALTER TABLE NETBACKUP.VAULT_RETENMAP ADD (
  CONSTRAINT R_53 
  FOREIGN KEY (VAULT_ID) 
  REFERENCES NETBACKUP.VAULT (VAULT_ID)
  ENABLE VALIDATE,
  CONSTRAINT R_73 
  FOREIGN KEY (VAULT_ID) 
  REFERENCES NETBACKUP.VAULTMGMT (VAULTMGMT_ID)
  ENABLE VALIDATE);
ALTER TABLE NETBACKUP.WINDOW
 DROP PRIMARY KEY CASCADE;

DROP TABLE NETBACKUP.WINDOW CASCADE CONSTRAINTS;

CREATE TABLE NETBACKUP.WINDOW
(
  DAY           INTEGER,
  STARTSECS     INTEGER,
  DURATIONSECS  INTEGER,
  SCHEDULER_ID  INTEGER                         NOT NULL,
  DATE_INSERT   DATE,
  DATE_UPDATE   DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


CREATE UNIQUE INDEX NETBACKUP.PK_WINDOW ON NETBACKUP.WINDOW
(SCHEDULER_ID, DAY)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

ALTER TABLE NETBACKUP.WINDOW ADD (
  CONSTRAINT PK_WINDOW
  PRIMARY KEY
  (SCHEDULER_ID, DAY)
  USING INDEX NETBACKUP.PK_WINDOW
  ENABLE VALIDATE);

ALTER TABLE NETBACKUP.WINDOW ADD (
  CONSTRAINT R_47 
  FOREIGN KEY (SCHEDULER_ID) 
  REFERENCES NETBACKUP.SCHEDULER (SCHEDULER_ID)
  ENABLE VALIDATE);
ALTER TABLE NETBACKUP.JOB
 DROP PRIMARY KEY CASCADE;

DROP TABLE NETBACKUP.JOB CASCADE CONSTRAINTS;

CREATE TABLE NETBACKUP.JOB
(
  JOB_ID           INTEGER                      NOT NULL,
  TYPE             VARCHAR2(64 BYTE),
  STATE            VARCHAR2(64 BYTE),
  STATUS           INTEGER,
  START_TIME       DATE,
  END_TIME         DATE,
  ACTIVE_START     DATE,
  ACTIVE_ELAPSED   DATE,
  ATTEMPT          INTEGER,
  KILOBYTES        INTEGER,
  KBSEC            INTEGER,
  FILES            INTEGER,
  OWNER            VARCHAR2(64 BYTE),
  COPY             INTEGER,
  PARENT           INTEGER,
  SESSION_ID       INTEGER,
  MEDIA_EJECT      INTEGER,
  MEDIA_SERVER_ID  INTEGER,
  CLIENT_ID        INTEGER,
  POLICY_ID        INTEGER,
  SCHEDULER_ID     INTEGER,
  MASTER_ID        INTEGER                      NOT NULL,
  VAULTPROFILE_ID  INTEGER,
  PID              INTEGER,
  DATE_INSERT      DATE,
  DATE_UPDATE      DATE,
  OUTER_ID         INTEGER                      NOT NULL
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;

COMMENT ON COLUMN NETBACKUP.JOB.OUTER_ID IS 'NetBackup JOBID';


CREATE INDEX NETBACKUP.IF_JOB_CLIENT ON NETBACKUP.JOB
(CLIENT_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX NETBACKUP.IF_JOB_MASTER ON NETBACKUP.JOB
(MASTER_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX NETBACKUP.IF_JOB_MEDIAS ON NETBACKUP.JOB
(MEDIA_SERVER_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX NETBACKUP.IF_JOB_PARENT ON NETBACKUP.JOB
(PARENT)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX NETBACKUP.IF_JOB_POLICY ON NETBACKUP.JOB
(POLICY_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX NETBACKUP.IF_JOB_SCHEDULER ON NETBACKUP.JOB
(SCHEDULER_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX NETBACKUP.IF_JOB_VAULTPROFILE ON NETBACKUP.JOB
(VAULTPROFILE_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX NETBACKUP.PK_JOB ON NETBACKUP.JOB
(JOB_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX NETBACKUP.UI_JOB ON NETBACKUP.JOB
(OUTER_ID, MASTER_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE OR REPLACE TRIGGER NETBACKUP.Job_BI
/******************************************************************************
   NAME:       Job_BI
   PURPOSE:    

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        03/03/2023      User       1. Created this trigger.

   NOTES:

   Automatically available Auto Replace Keywords:
      Object Name:     Job_BI
      Sysdate:         03/03/2023
      Date and Time:   03/03/2023, 21:34:36, and 03/03/2023 21:34:36
      Username:        User (set in TOAD Options, Proc Templates)
      Table Name:      JOB (set in the "New PL/SQL Object" dialog)
      Trigger Options:  (set in the "New PL/SQL Object" dialog)
******************************************************************************/
BEFORE INSERT
ON NETBACKUP.JOB
REFERENCING NEW AS New OLD AS Old
FOR EACH ROW
BEGIN
:new.Job_ID := netbackupid_seq.nextval;
END Job_BI;
/


ALTER TABLE NETBACKUP.JOB ADD (
  CONSTRAINT PK_JOB
  PRIMARY KEY
  (JOB_ID)
  USING INDEX NETBACKUP.PK_JOB
  ENABLE VALIDATE);

ALTER TABLE NETBACKUP.JOB ADD (
  CONSTRAINT R_54 
  FOREIGN KEY (PARENT) 
  REFERENCES NETBACKUP.JOB (JOB_ID)
  ENABLE VALIDATE);
